{"version":3,"file":"index.cjs","sources":["../src/performance/fetch.ts","../src/cache.ts","../src/config.ts","../src/utils.ts","../src/report.ts","../src/performance/observerEntries.ts","../src/performance/xhr.ts","../src/behavior/index.ts","../src/behavior/onClick.ts","../src/behavior/pageChange.ts","../src/behavior/pv.ts","../src/index.ts","../src/error/index.ts","../src/performance/index.ts","../src/performance/observerLCP.ts","../src/performance/observerFCP.ts","../src/performance/observerLoad.ts","../src/performance/observerPaint.ts"],"sourcesContent":["const originalFetch = window.fetch;\n\nfunction overwriteFetch(): void {\n    window.fetch = function newFetch(\n      url: URL | RequestInfo,\n      config: RequestInit | undefined\n    ): Promise<Response> {\n      const startTime = Date.now();\n      const reportData = {\n        type: \"performance\",\n        subType: \"fetch\",\n        url,\n        startTime,\n        method: config?.method,\n        endTime: 0,\n        duration: 0,\n        status: 0,\n        success: false\n      };\n      return originalFetch(url, config).then((res: Response) => {\n        const endTime = Date.now();\n        reportData.endTime = endTime; // 请求完成的时间\n        reportData.duration = endTime - startTime; // 请求的时长\n        const data = res.clone();\n        reportData.status = res.status;\n        reportData.success = res.ok;\n        return res;\n      }).catch((error: any) => {\n        const endTime = Date.now();\n        reportData.endTime = endTime; // 请求完成的时间\n        reportData.duration = endTime - startTime; // 请求的时长\n        reportData.status = error.status;\n        reportData.success = false;\n        return new Response(null, { status: error.status }); // Return a Response object\n      });\n    };\n  }\nexport default function fetch() {\n    overwriteFetch();\n}","const cache: any[] = [];\nexport function getCache(){\n    return cache\n}\n\nexport function addCache(data: any){\n    cache.push(data)\n}\n\nexport function clearCache(){\n    cache.length = 0\n}","const config = {\n    url: \"http://127.0.0.1:3000/reportData\",\n    projectName:\"webMonitorSdk\",\n    appId: \"20000902\",\n    userId:\"90081\",\n    isImageUpload: false,\n    batchSize: 5\n};\n\nexport function setConfig(options){\n    console.error('config options', options);\n    \n    for(const key in config){\n        if(options[key]){\n            config[key] = options[key]\n        }\n    }\n}\n\nexport default config","export function deepClone(target: any){\n    if(typeof target === \"object\"){\n        const result: any = Array.isArray(target) ? [] : {};\n        for(const key in target){\n            if(typeof target[key] === \"object\"){\n                result[key] === deepClone(target[key])\n            }else{\n                result[key] = target[key]\n            }\n        }\n        return result\n    }\n    return target\n}\n\nexport function generateUniqueId(){\n    return \"id-\" + Date.now() + \"-\" + Math.random().toString(36).substring(2,9)\n}","import { getCache, addCache, clearCache } from \"./cache\";\nimport config from \"./config\";\nimport { generateUniqueId } from \"./utils\";\n\nexport const originalProto = XMLHttpRequest.prototype;\nexport const originalOpen = XMLHttpRequest.prototype.open;\nexport const originalSend = XMLHttpRequest.prototype.send;\n\n// 数据上报函数 优先使用 sendBeacon方法，如果不支持，根据是否开启图片上传，选择使用imgRequest或者xhrRequest\nexport function report(data: any){\n    if(!config.url){\n        console.error(\"请设置上传url地址\");\n    }\n    const reportData = JSON.stringify({\n        id: generateUniqueId(),\n        data\n    });\n\n    // 图片上传，直接使用imgRequest\n    if(config.isImageUpload){\n        imgRequest(reportData);\n    }else{\n        // 如果浏览器支持sendBeacon，使用sendBeacon，否则使用xhr\n        if(!!window.navigator.sendBeacon) return beaconRequest(reportData);\n        xhrRequest(config.url, reportData);\n    }\n}\n\n/**\n * 批量延迟上报数据\n * @description 首先将传入的数据添加到缓存中，如果缓存中的数据大于等于20条，就进行上报并清空缓存\n * @param data \n */\nexport function lazyReportBatch(data: any){\n    addCache(data);\n    const cacheData = getCache();\n    console.error(\"cacheData\", cacheData);\n    if(cacheData.length && cacheData.length > config.batchSize){\n        report(cacheData);\n        clearCache()\n    }\n}\n\n// 发送图片数据\nexport function imgRequest(data: any){\n    const img = new Image();\n    img.src = `${config.url}?data=${encodeURIComponent(JSON.stringify(data))}`\n}\n\n// 普通ajax发送请求数据\nexport function xhrRequest(url: string, data: any){\n    // 浏览器支持requestIdleCallback\n    if(window.requestIdleCallback){\n        window.requestIdleCallback(()=>{\n            const xhr = new XMLHttpRequest();\n            originalOpen.call(xhr, \"post\", url, true);\n            originalSend.call(xhr, JSON.stringify(data));\n        },{ timeout: 3000 })\n    }else{\n        // 浏览器不支持requestIdleCallback，使用setTimeout，避免在页面加载或其他关键操作期间占用过多的资源\n        setTimeout(()=>{\n            const xhr = new XMLHttpRequest();\n            originalOpen.call(xhr, \"post\", url, true);\n            originalSend.call(xhr, JSON.stringify(data));\n        })\n    }\n}\n\nexport function beaconRequest(data) {\n    if (window.requestIdleCallback) {\n        window.requestIdleCallback(\n            () => {\n                window.navigator.sendBeacon(config.url, data);\n            },\n            { timeout: 3000 }\n        );\n    } else {\n        setTimeout(() => {\n            window.navigator.sendBeacon(config.url, data);\n        });\n    }\n}","import { lazyReportBatch } from \"../report\";\n\nfunction observerEvent(){\n  \n  function entryHandler(entryList) {\n    const entries = entryList.getEntries();\n    for(const entry of entries){\n      for(const entry of entries){\n        if(observer){\n          observer.disconnect();\n        }\n        const reportData = {\n          name: entry.name, // 资源的名字\n          type: \"performance\", // 类型\n          subType: entry.subType, // 子类型\n          sourceType: entry.entryType, // 资源的类型\n          duration: entry.duration, // 资源的时长\n          dns: entry.domainLookupEnd - entry.domainLookupStart, // DNS解析的时长\n          tcp: entry.connectEnd - entry.connectStart, // TCP连接的时长\n          redirect: entry.redirectEnd - entry.redirectStart, // 重定向的时长\n          ttfb: entry.responseStart, // 首字节时间\n          protocol: entry.nextHopProtocol, // 请求协议\n          responseBodySize: entry.responseBodySize, // 响应体大小\n          responseHeaderSize: entry.transferSize - entry.encodedBodySize, // 响应头大小\n          transferSize: entry.transferSize, // 请求内容大小\n          resourceSize: entry.decodedBodySize, // 解压后的资源大小\n          startTime: performance.now(), // 资源加载的时间\n        }\n        console.log(\"entry\", entry);\n        lazyReportBatch(reportData);\n      }\n    }\n  }\n\n  const observer = new PerformanceObserver(entryHandler);\n  observer.observe({ type: 'resource', buffered: true });\n}\n\n\nfunction observerEntries() {\n  if(document.readyState === \"complete\"){\n    observerEvent();\n  }else{\n    const onLoad = () => {\n      observerEvent();\n      window.removeEventListener(\"load\", onLoad, true);\n      \n    }\n    window.addEventListener(\"load\", onLoad, true);\n  }\n}\n\nexport default observerEntries","import { lazyReportBatch } from \"../report\";\n\ninterface XMLHttpRequestWithMethod extends XMLHttpRequest {\n  method: string;\n  url: string;\n  startTime: number;\n  endTime: number;\n  duration: number;\n}\n\n\nexport const originalProto = XMLHttpRequest.prototype as  XMLHttpRequestWithMethod;\nexport const originalOpen = originalProto.open;\nexport const originalSend = originalProto.send;\n\n\nfunction overwriteOpenAndEnd(){\n  // 重写open\n  originalProto.open = function(...args){\n    this.method = args[0];\n    this.url = args[1];\n    originalOpen.apply(this, args);\n  }\n  // 重写send\n  originalProto.send = function(...args){\n    this.startTime = Date.now();\n    const onLoaded = ()=>{\n      this.endTime = Date.now();\n      this.duration = this.endTime - this.startTime;\n      const {\n        status,\n        duration,\n        method,\n        url,\n        startTime,\n        endTime\n\n      } = this;\n\n      const reportData = {\n        type: \"performance\",\n        subType: \"xhr\",\n        success: status >= 200 && status < 300,\n        method: method.toUpperCase(),\n        status,\n        duration,\n        \n        url,\n        startTime,\n        endTime\n      }\n      lazyReportBatch(reportData);\n      this.removeEventListener(\"loaded\", onLoaded, true);\n    }\n    this.addEventListener(\"loaded\", onLoaded, true);\n    originalSend.apply(this, args);\n  }\n}\n\nfunction xhr(){\n  overwriteOpenAndEnd()\n}\n\nexport default xhr","import onClick from './onClick';\nimport pageChange from './pageChange';\nimport pv from './pv';\n\n\nexport default function behavior() {\n  onClick(),\n  pageChange(),\n  pv()\n}\n","import { lazyReportBatch } from \"../report\";\n\n\nexport default function onClick(){\n    [\"mousedown\",\"touchstart\"].forEach(eventType=>{\n        window.addEventListener(eventType, (event)=>{\n            const target = event.target as any;\n            const path = (event as MouseEvent).composedPath ? (event as MouseEvent).composedPath() : undefined;\n            if(target && target.tagName){\n                const reportData = {\n                    type:\"behavior\",\n                    subType: \"click\",\n                    target: target.tagName,\n                    startTime: event.timeStamp,\n                    innerHtml: target.innerHTML,\n                    outerHtml: target.outerHTML,\n                    with: target.offsetWidth,\n                    height: target.offsetHeight,\n                    eventType,\n                    path\n                }\n                lazyReportBatch(reportData);\n            }\n        }, true)\n    })\n}","import { lazyReportBatch } from \"../report\";\nimport { generateUniqueId } from \"../utils\";\n\n\nexport default function pageChange() {\n    // hash history\n    let oldUrl = \"\";\n    window.addEventListener(\"hashchange\",function(event){\n        const newUrl = event.newURL;\n        const reportData = {\n            type:\"behavior\",\n            subType: \"pageChange\",\n            from: oldUrl,\n            to: newUrl,\n            startTime: performance.now(),\n            uuid: generateUniqueId()\n        };\n        lazyReportBatch(reportData);\n        oldUrl = newUrl;\n    },true);\n\n    let from = \"\";\n    window.addEventListener(\"popstate\",function(event){\n        const to = window.location.href;\n        const reportData = {\n            from,\n            to,\n            type:\"behavior\",\n            subType: \"popstate\",\n            startTime: performance.now(),\n            uuid: generateUniqueId()\n        };\n        lazyReportBatch(reportData);\n        from = to;\n    }, true)\n}","import { lazyReportBatch } from \"../report\";\nimport { generateUniqueId } from \"../utils\";\n\n\nexport default function pv() {\n    const reportData = {\n        type:\"behavior\",\n        subType: \"pv\",\n        pageUrl: window.location.href,\n        startTime: performance.now(),\n        referrer: document.referrer,\n        uuid: generateUniqueId()\n    };\n\n    lazyReportBatch(reportData);\n}","import performance from \"./performance\";\nimport error from \"./error\"\nimport  behavior from \"./behavior\"\nimport { setConfig } from \"./config\";\nimport { lazyReportBatch } from \"./report\";\n\nwindow.__webMonitorSdk__ = {\n    version: \"0.0.1\",\n    vue: false,\n    react: false\n}\n\n// 针对Vue的错误捕获\nexport function install(Vue: any, options: any){\n    if(window.__webMonitorSdk__.vue) return;\n    window.__webMonitorSdk__.vue = true;\n    const handler = Vue.config.errorHandler;\n\n    // vue项目中通过Vue.config.errorHandler来捕获错误 https://cn.vuejs.org/api/application.html#app-config-errorhandler\n    Vue.config.errorHandler = function(err, vm, info) {\n        // 上报具体的错误信息\n        const reportData = {\n            info,\n            error: err.stack,\n            subType:\"vue\",\n            type:\"error\",\n            startTime: window.performance.now(),\n            pageUrl: window.location.href\n        }\n        console.log(\"vue error\", reportData);\n        \n        lazyReportBatch(reportData);\n        if(handler){\n            handler.call(this, err, vm, info)\n        }\n    }\n}\n\n// 针对React的错误捕获\nexport function errorBoundary(err, info){\n    if(window.__webMonitorSdk__.react) return;\n    window.__webMonitorSdk__.react = true;\n    // 上报具体的错误信息\n    const reportData = {\n        error: err.stack,\n        info,\n        subType:\"react\",\n        type:\"error\",\n        startTime: window.performance.now(),\n        pageUrl: window.location.href\n    }\n    lazyReportBatch(reportData);\n}\n\nexport function init(options){\n    setConfig(options);\n    // error()\n    // performance()\n    behavior()\n}\n\nexport default {\n    install,\n    errorBoundary,\n    init,\n    error,\n    behavior,\n    performance\n}\n\n\n// webMonitorSdk.init({\n//     batchSize: 50\n// })","import { lazyReportBatch } from \"../report\";\n\nfunction error() {\n    // 捕获资源加载失败的错误： js css img\n    window.addEventListener(\"error\", (event: any) => {\n        const target = event.target as any;\n        if(!target) return; // 说明这是js内部的语法错误\n        if(target.src || target.href){\n            const url = target.src || target.href;\n            const reportData = {\n                type:\"error\",\n                subType: \"resource\",\n                url,\n                html: target.outerHTML,\n                pageUrl: window.location.href,\n                paths: event.path // 路径\n            }\n            lazyReportBatch(reportData);\n        }\n    }, true);\n\n    // 捕获js错误\n    window.onerror = (msg, url, lineNo, columnNo, error) => {\n        const reportData = {\n            type: \"error\",\n            subType: \"js\",\n            msg,\n            url,\n            lineNo,\n            columnNo,\n            stack: (error as Error).stack || \"\",\n            pageUrl: window.location.href,\n            startTime: performance.now()\n        }\n        lazyReportBatch(reportData);\n    }\n\n    // 捕获promise错误\n    window.addEventListener(\"unhandledrejection\", (event) => {\n      const reportData = {\n        type:\"error\",\n        subType: \"promise\",\n        msg: event.reason,\n        pageUrl: window.location.href,\n        startTime: event.timeStamp\n      }\n      lazyReportBatch(reportData);\n    })\n}\n\n\nexport default error;","import fetch from \"./fetch\";\nimport observerEntries from \"./observerEntries\";\nimport observerFCP from \"./observerFCP\";\nimport observerLCP from \"./observerLCP\";\nimport observerPaint from \"./observerPaint\";\nimport observerLoad from \"./observerLoad\";\nimport xhr from \"./xhr\";\n\nexport default function performance() {\n  fetch();\n  observerEntries();\n  observerLCP();\n  observerFCP();\n  observerLoad();\n  observerPaint();\n  xhr();\n}","import { lazyReportBatch } from \"../report\";\n\n\n\n// 观察LCP\nfunction observerLCP() {\n\n  function entryHandler(entryList) {\n    for(const entry of entryList.getEntries()){\n      if(entry.name === 'largest-contentful-paint'){\n        observer.disconnect();\n        const json = entry.toJSON();\n        console.log(\"entryJson\", json);\n        const reportData = {\n          ...json,\n          type:\"performance\",\n          subType: entry.name,\n          pageUrl: window.location.href\n        }\n        lazyReportBatch(reportData);\n      }\n    }\n  }\n  \n  const observer = new PerformanceObserver(entryHandler);\n  // buffered: true，确保观察到所有的paint事件\n  observer.observe({ type: 'largest-contentful-paint', buffered: true });\n}\n\nexport default observerLCP","import { lazyReportBatch } from \"../report\";\n\nfunction observerFCP() {\n  function entryHandler(entryList) {\n    for(const entry of entryList.getEntries()){\n      if(entry.name === 'first-contentful-paint'){\n        observer.disconnect();\n        const json = entry.toJSON();\n        console.log(\"entryJson\", json);\n        const reportData = {\n          ...json,\n          type:\"performance\",\n          subType: entry.name,\n          pageUrl: window.location.href\n        }\n        // 上报数据\n        lazyReportBatch(reportData);\n      }\n    }\n  }\n  \n\n  const observer = new PerformanceObserver(entryHandler); \n  // buffered: true，确保观察到所有的paint事件  \n  observer.observe({ type: 'paint', buffered: true });\n}\n\nexport default observerFCP","import { lazyReportBatch } from \"../report\";\n\nfunction observerLoad(){\n  window.addEventListener(\"pageshow\",(event)=>{\n    requestAnimationFrame(()=>{\n      [\"load\"].forEach((type) => {\n        const reportData = {\n          type:\"performance\",\n          subType: type,\n          pageUrl: window.location.href,\n          startTime: performance.now() - event.timeStamp, // 页面加载的时间\n        }\n        lazyReportBatch(reportData);\n      })\n    })\n  }, true)\n}\n\nexport default observerLoad","import { lazyReportBatch } from \"../report\";\n\n\n\n// 统计和计算fp的时间\nfunction observerPaint() {\n  function entryHandler(entryList) {\n    for(const entry of entryList.getEntries()){\n      if(entry.name === 'first-paint'){\n        observer.disconnect();\n        const json = entry.toJSON();\n        console.log(\"entryJson\", json);\n        const reportData = {\n          ...json,\n          type:\"performance\",\n          subType: entry.name,\n          pageUrl: window.location.href\n        }\n        lazyReportBatch(reportData);\n      }\n    }\n  }\n\n  const observer = new PerformanceObserver(entryHandler);\n  // buffered: true，确保观察到所有的paint事件\n  observer.observe({ type: 'paint', buffered: true });\n}\n\nexport default observerPaint"],"names":["originalFetch","window","fetch","url","config","Date","now","method","then","res","clone","status","ok","catch","error","Response","cache","projectName","appId","userId","isImageUpload","batchSize","generateUniqueId","Math","random","toString","substring","originalOpen","XMLHttpRequest","prototype","open","originalSend","send","report","data","console","reportData","JSON","stringify","id","Image","src","concat","encodeURIComponent","imgRequest","navigator","sendBeacon","requestIdleCallback","timeout","setTimeout","beaconRequest","xhr","call","xhrRequest","lazyReportBatch","push","addCache","cacheData","length","observerEvent","observer","PerformanceObserver","entryList","entries","getEntries","entries_1","_i","entries_2","_a","entry_1","disconnect","name","type","subType","sourceType","entryType","duration","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","redirect","redirectEnd","redirectStart","ttfb","responseStart","protocol","nextHopProtocol","responseBodySize","responseHeaderSize","transferSize","encodedBodySize","resourceSize","decodedBodySize","startTime","performance","log","observe","buffered","originalProto","args","arguments","this","apply","_this","onLoaded","endTime","success","toUpperCase","removeEventListener","addEventListener","behavior","forEach","eventType","event","target","path","composedPath","undefined","tagName","timeStamp","innerHtml","innerHTML","outerHtml","outerHTML","with","offsetWidth","height","offsetHeight","oldUrl","newUrl","newURL","from","to","uuid","location","href","pageChange","pageUrl","referrer","document","install","Vue","options","__webMonitorSdk__","vue","handler","errorHandler","err","vm","info","stack","errorBoundary","react","init","key","setConfig","version","index","html","paths","onerror","msg","lineNo","columnNo","reason","readyState","onLoad_1","observerEntries","entry","json","toJSON","observerFCP","requestAnimationFrame","observerPaint"],"mappings":"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"}