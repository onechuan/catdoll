{"version":3,"file":"index.cjs","sources":["../src/cache.ts","../src/config.ts","../src/report.ts","../src/utils.ts","../src/performance/xhr.ts","../src/error/index.ts","../src/index.ts"],"sourcesContent":["const cache: any[] = [];\nexport function getCache(){\n    return cache\n}\n\nexport function addCache(data: any){\n    cache.push(data)\n}\n\nexport function clearCache(){\n    cache.length = 0\n}","const config = {\n    url: \"http://127.0.0.1:3000/api\",\n    projectName:\"webMonitorSdk\",\n    appId: \"20000902\",\n    userId:\"90081\",\n    isImageUpload: false,\n    batchSize: 20\n};\n\nexport function setConfig(options){\n    for(const key in config){\n        if(options[key]){}\n    }\n}\n\nexport default config","import { getCache, addCache, clearCache } from \"./cache\";\nimport config from \"./config\";\nimport { generateUniqueId } from \"./utils\";\n\nexport const originalProto = XMLHttpRequest.prototype;\nexport const originalOpen = XMLHttpRequest.prototype.open;\nexport const originalSend = XMLHttpRequest.prototype.send;\n\n// 数据上报函数 优先使用 sendBeacon方法，如果不支持，根据是否开启图片上传，选择使用imgRequest或者xhrRequest\nexport function report(data: any){\n    if(!config.url){\n        console.error(\"请设置上传url地址\");\n    }\n    const reportData = JSON.stringify({\n        id: generateUniqueId(),\n        data\n    });\n    // 发送数据，优先使用 sendBeacon\n    const value = beaconRequest(config.url, reportData) as unknown as boolean;\n    if(!value){\n        // 上报数据，使用图片方式\n        config.isImageUpload ? imgRequest(reportData) : xhrRequest(config.url, reportData);\n    }\n}\n\n/**\n * 批量延迟上报数据\n * @description 首先将传入的数据添加到缓存中，如果缓存中的数据大于等于20条，就进行上报并清空缓存\n * @param data \n */\nexport function lazyReportBatch(data: any){\n    addCache(data);\n    const cacheData = getCache();\n    if(cacheData.length && cacheData.length > config.batchSize){\n        report(cacheData);\n        clearCache()\n    }\n}\n\n// 发送图片数据\nexport function imgRequest(data: any){\n    const img = new Image();\n    img.src = `${config.url}?data=${encodeURIComponent(JSON.stringify(data))}`\n}\n\n// 普通ajax发送请求数据\nexport function xhrRequest(url: string, data: any){\n    // 浏览器支持requestIdleCallback\n    if(window.requestIdleCallback){\n        window.requestIdleCallback(()=>{\n            const xhr = new XMLHttpRequest();\n            originalOpen.call(xhr, \"post\", url, true);\n            originalSend.call(xhr, JSON.stringify(data));\n        },{ timeout: 3000 })\n    }else{\n        // 浏览器不支持requestIdleCallback，使用setTimeout，避免在页面加载或其他关键操作期间占用过多的资源\n        setTimeout(()=>{\n            const xhr = new XMLHttpRequest();\n            originalOpen.call(xhr, \"post\", url, true);\n            originalSend.call(xhr, JSON.stringify(data));\n        })\n    }\n}\n\nexport const isSupportSendBeacon = ()=> \"sendBeacon\" in navigator;\n\nconst sendBeacon = isSupportSendBeacon() ? navigator.sendBeacon : xhrRequest;\n\nexport function beaconRequest(url: string, data: any){\n    let flag = true;\n    if(window.requestIdleCallback){\n        window.requestIdleCallback(()=>{\n            flag = sendBeacon(url, data) as boolean\n            return flag\n        },{\n            timeout: 3*1000\n        })\n    }else{\n        setTimeout(() => {\n            flag = sendBeacon(url, data) as boolean\n            return flag\n        });\n    }\n}","export function deepClone(target: any){\n    if(typeof target === \"object\"){\n        const result: any = Array.isArray(target) ? [] : {};\n        for(const key in target){\n            if(typeof target[key] === \"object\"){\n                result[key] === deepClone(target[key])\n            }else{\n                result[key] = target[key]\n            }\n        }\n        return result\n    }\n    return target\n}\n\nexport function generateUniqueId(){\n    return \"id-\" + Date.now() + \"-\" + Math.random().toString(36).substring(2,9)\n}","import { lazyReportBatch } from \"../report\";\n\ninterface XMLHttpRequestWithMethod extends XMLHttpRequest {\n  method: string;\n  url: string;\n  startTime: number;\n  endTime: number;\n  duration: number;\n}\n\n\nexport const originalProto = XMLHttpRequest.prototype as  XMLHttpRequestWithMethod;\nexport const originalOpen = originalProto.open;\nexport const originalSend = originalProto.send;\n\n\nfunction overwriteOpenAndEnd(){\n  // 重写open\n  originalProto.open = function(...args){\n    this.method = args[0];\n    this.url = args[1];\n    originalOpen.apply(this, args);\n  }\n  // 重写send\n  originalProto.send = function(...args){\n    this.startTime = Date.now();\n    const onLoaded = ()=>{\n      this.endTime = Date.now();\n      this.duration = this.endTime - this.startTime;\n      const {\n        status,\n        duration,\n        method,\n        url,\n        startTime,\n        endTime\n\n      } = this;\n\n      const reportData = {\n        type: \"performance\",\n        subType: \"xhr\",\n        success: status >= 200 && status < 300,\n        method: method.toUpperCase(),\n        status,\n        duration,\n        \n        url,\n        startTime,\n        endTime\n      }\n      lazyReportBatch(reportData);\n      this.removeEventListener(\"loaded\", onLoaded, true);\n    }\n    this.addEventListener(\"loaded\", onLoaded, true);\n    originalSend.apply(this, args);\n  }\n}\n\nfunction xhr(){\n  overwriteOpenAndEnd()\n}\n\nexport default xhr","import { lazyReportBatch } from \"../report\";\n\nfunction error() {\n    // 捕获资源加载失败的错误： js css img\n    window.addEventListener(\"error\", (event: any) => {\n        const target = event.target as any;\n        if(!target) return; // 说明这是js内部的语法错误\n        if(target.src || target.href){\n            const url = target.src || target.href;\n            const reportData = {\n                type:\"error\",\n                subType: \"resource\",\n                url,\n                html: target.outerHTML,\n                pageUrl: window.location.href,\n                paths: event.path // 路径\n            }\n            lazyReportBatch(reportData);\n        }\n    }, true);\n\n    // 捕获js错误\n    window.onerror = (msg, url, lineNo, columnNo, error) => {\n        const reportData = {\n            type: \"error\",\n            subType: \"js\",\n            msg,\n            url,\n            lineNo,\n            columnNo,\n            stack: (error as Error).stack || \"\",\n            pageUrl: window.location.href,\n            startTime: performance.now()\n        }\n        lazyReportBatch(reportData);\n    }\n\n    // 捕获promise错误\n    window.addEventListener(\"unhandledrejection\", (event) => {\n      const reportData = {\n        type:\"error\",\n        subType: \"promise\",\n        msg: event.reason,\n        pageUrl: window.location.href,\n        startTime: event.timeStamp\n      }\n      lazyReportBatch(reportData);\n    })\n}\n\n\nexport default error;","import * as performance from \"./performance\";\nimport * as error from \"./error\"\nimport * as behavior from \"./behavior\"\nimport { setConfig } from \"./config\";\n\nwindow.__webMonitorSdk__ = {\n    version: \"0.0.1\",\n    vue: false,\n    react: false\n}\n\n// 针对Vue的错误捕获\nexport function install(Vue: any, options: any){\n    if(window.__webMonitorSdk__.vue) return;\n    window.__webMonitorSdk__.vue = true;\n    const handler = Vue.config.errorHandler;\n\n    // vue项目中通过Vue.config.errorHandler来捕获错误 https://cn.vuejs.org/api/application.html#app-config-errorhandler\n    Vue.config.errorHandler = function(err, vm, info) {\n        // TODO: 上报具体的错误信息\n        if(handler){\n            handler.call(this, err, vm, info)\n        }\n    }\n}\n\n// 针对React的错误捕获\nfunction errorBoundary(err){\n    if(window.__webMonitorSdk__.react) return;\n    window.__webMonitorSdk__.react = true;\n    // TODO: 上报具体的错误信息\n}\n\nfunction init(options){\n    setConfig(options);\n}\n\nexport default {\n    install,\n    performance,\n    error,\n    init,\n    behavior\n}\n\n// webMonitorSdk.init({\n//     batchSize: 50\n// })"],"names":["cache","config","url","projectName","appId","userId","isImageUpload","batchSize","originalOpen","XMLHttpRequest","prototype","open","originalSend","send","report","data","reportData","JSON","stringify","id","Date","now","Math","random","toString","substring","value","window","requestIdleCallback","sendBeacon","timeout","setTimeout","beaconRequest","xhrRequest","lazyReportBatch","push","addCache","cacheData","length","xhr","call","navigator","originalProto","addEventListener","event","target","src","href","type","subType","html","outerHTML","pageUrl","location","paths","path","onerror","msg","lineNo","columnNo","error","stack","startTime","performance","reason","timeStamp","install","Vue","options","__webMonitorSdk__","vue","handler","errorHandler","err","vm","info","this","version","react","index","init","key","setConfig","behavior"],"mappings":"oEAAA,IAAMA,EAAe,GCArB,IAAMC,EAAS,CACXC,IAAK,4BACLC,YAAY,gBACZC,MAAO,WACPC,OAAO,QACPC,eAAe,EACfC,UAAW,ICDR,IAAMC,EAAeC,eAAeC,UAAUC,KACxCC,EAAeH,eAAeC,UAAUG,KAG/C,SAAUC,EAAOC,GAInB,IAAMC,EAAaC,KAAKC,UAAU,CAC9BC,GCEG,MAAQC,KAAKC,MAAQ,IAAMC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAE,GDDrEV,KAAIA,IAGFW,EAkDM,SAAcxB,EAAaa,GAEpCY,OAAOC,oBACND,OAAOC,qBAAoB,WAEvB,OADOC,EAAW3B,EAAKa,EAE3B,GAAE,CACEe,QAAS,MAGbC,YAAW,WAEP,OADOF,EAAW3B,EAAKa,EAE3B,GAER,CAjEkBiB,CAAc/B,EAAOC,IAAKc,GACpCU,GAEgDO,EAAWhC,EAAOC,IAAKc,EAE/E,CAOM,SAAUkB,EAAgBnB,IFzB1B,SAAmBA,GACrBf,EAAMmC,KAAKpB,EACf,CEwBIqB,CAASrB,GACT,IAAMsB,EF9BCrC,EE+BJqC,EAAUC,QAAUD,EAAUC,OAASrC,EAAOM,YAC7CO,EAAOuB,GFxBXrC,EAAMsC,OAAS,EE2BnB,CASgB,SAAAL,EAAW/B,EAAaa,GAEjCY,OAAOC,oBACND,OAAOC,qBAAoB,WACvB,IAAMW,EAAM,IAAI9B,eAChBD,EAAagC,KAAKD,EAAK,OAAQrC,GAAK,GACpCU,EAAa4B,KAAKD,EAAKtB,KAAKC,UAAUH,GAC1C,GAAE,CAAEe,QAAS,MAGbC,YAAW,WACP,IAAMQ,EAAM,IAAI9B,eAChBD,EAAagC,KAAKD,EAAK,OAAQrC,GAAK,GACpCU,EAAa4B,KAAKD,EAAKtB,KAAKC,UAAUH,GAC1C,GAER,CAEO,IAEDc,EAFkC,eAAgBY,UAEbA,UAAUZ,WAAaI,sDEvD3D,IAAMS,EAAgBjC,eAAeC,UAC/BF,EAAekC,EAAc/B,KAC7BC,EAAe8B,EAAc7B,iICX1C,WAEIc,OAAOgB,iBAAiB,SAAS,SAACC,GAC9B,IAAMC,EAASD,EAAMC,OACjBA,KACDA,EAAOC,KAAOD,EAAOE,OAUpBb,EARmB,CACfc,KAAK,QACLC,QAAS,WACT/C,IAJQ2C,EAAOC,KAAOD,EAAOE,KAK7BG,KAAML,EAAOM,UACbC,QAASzB,OAAO0B,SAASN,KACzBO,MAAOV,EAAMW,OAIxB,IAAE,GAGH5B,OAAO6B,QAAU,SAACC,EAAKvD,EAAKwD,EAAQC,EAAUC,GAY1C1B,EAXmB,CACfc,KAAM,QACNC,QAAS,KACTQ,IAAGA,EACHvD,IAAGA,EACHwD,OAAMA,EACNC,SAAQA,EACRE,MAAQD,EAAgBC,OAAS,GACjCT,QAASzB,OAAO0B,SAASN,KACzBe,UAAWC,YAAY1C,OAG/B,EAGAM,OAAOgB,iBAAiB,sBAAsB,SAACC,GAQ7CV,EAPmB,CACjBc,KAAK,QACLC,QAAS,UACTQ,IAAKb,EAAMoB,OACXZ,QAASzB,OAAO0B,SAASN,KACzBe,UAAWlB,EAAMqB,WAGrB,GACJ,sCCpCgB,SAAAC,EAAQC,EAAUC,GAC9B,IAAGzC,OAAO0C,kBAAkBC,IAA5B,CACA3C,OAAO0C,kBAAkBC,KAAM,EAC/B,IAAMC,EAAUJ,EAAIlE,OAAOuE,aAG3BL,EAAIlE,OAAOuE,aAAe,SAASC,EAAKC,EAAIC,GAErCJ,GACCA,EAAQ/B,KAAKoC,KAAMH,EAAKC,EAAIC,EAEpC,CAVwC,CAW5C,CAnBAhD,OAAO0C,kBAAoB,CACvBQ,QAAS,QACTP,KAAK,EACLQ,OAAO,GA6BX,IAAeC,EAAA,CACXb,QAAOA,EACPH,YAAWA,EACXH,MAAKA,EACLoB,KARJ,SAAcZ,ILxBR,SAAoBA,GACtB,IAAI,IAAMa,KAAOhF,EACVmE,EAAQa,EAEnB,CKqBIC,CAAUd,EACd,EAOIe,SAAQA"}